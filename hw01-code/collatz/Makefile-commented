# Makefile to create the collatz programs. To use, type
#   > make
# Which will create the collatz_main program. Alternatively
#   > make collatz_main
# will also create the collatz_main program.
#
# To create and run the test program use
#   > make test
#
# Makefiles are divided into "rules" comprised of target,
# dependencies, and commands to execute to finish the target.
# 
# target : dependency1 dependency2
#       command1
#       command2
#       @command3 which is not printed
#       command4
#
# Some targets are files to create like the "collatz_main" program or
# "collatz_main.o" file. Other targets are "virtual" which specify
# commands to run such as 'clean'. Some targets like 'test' are a
# combination of creating files and running commands: 'make test' will
# ensure several programs are created before running the automated
# tests.

CFLAGS = -Wall -g					       # variable holding options to the c compiler
CC     = gcc $(CFLAGS)					       # variable holding the compilation command

collatz_main : collatz_funcs.o collatz_main.o collatz.h	       # collatz_main is a program, depends on two files, is default target
	$(CC) -o collatz_main collatz_funcs.o collatz_main.o   # when the other files are ready, compile collatz_main
	@echo collatz_main is ready			       # issue a report that the program is ready

collatz_main.o : collatz_main.c collatz.h		       # collatz_main.o depends on two source files
	$(CC) -c collatz_main.c				       # compile only, don't link yet

collatz_funcs.o : collatz_funcs.c collatz.h		       # collatz.o depends on collatz.c and collatz.h
	$(CC) -c $<					       # compile, use shortcut $< which becomes "collatz.c"

test_collatz : test_collatz.c collatz_funcs.o collatz.h	       # builds a test program for collatz functions
	$(CC) -o $@ $^

test : test_collatz collatz_main			       # runs automated tests, builds required programs first
	@chmod u+x testy				       # ensures that the 'testy' script is executable
	./testy test_collatz.org $(testnum)		       # runs automated tests

clean:							       # No dependencies: clean is the de facto cleanup target
	@echo Cleaning up object files			       # Report what's happening
	rm -f *.o collatz_main				       # Remove all the .o files and programs

clean-tests:						       # target to remove temporary files associated with testing
	@echo Removing temporary test files
	rm -f *.o test_collatz test-results
